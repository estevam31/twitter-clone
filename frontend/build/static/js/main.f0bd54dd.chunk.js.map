{"version":3,"sources":["config/graphql-config.js","pages/Main/styles.js","global-styles.js","components/Menu/styles.js","components/TweetButton/styles.js","components/TweetButton/index.js","components/Menu/index.js","components/Feed/styles.js","components/Feed/Header/styles.js","components/Feed/Header/index.js","components/Feed/WhatsHappening/styles.js","components/Feed/WhatsHappening/ActionBar/styles.js","components/Feed/WhatsHappening/ActionBar/index.js","repository/index.js","components/Feed/WhatsHappening/index.js","components/Feed/Tweets/styles.js","components/Feed/Tweets/index.js","components/Feed/index.js","components/Discover/styles.js","components/Discover/index.js","pages/Main/index.js","pages/Login/styles.js","pages/Login/index.js","routes.js","App.js","config/locale-config.js","index.js"],"names":["httpLink","HttpLink","uri","wsLink","WebSocketLink","options","reconnect","terminatingLink","split","query","getMainDefinition","kind","operation","link","ApolloLink","from","cache","InMemoryCache","client","ApolloClient","Container","styled","div","Column","props","width","color","justifyRight","blue","lightBlue","grey","MenuItemContainer","span","MenuItem","height","dontHover","ActiveMenuItem","TwitterIcon","Twitter","attrs","iconPadMg","HomeIcon","HomeCircle","HashIcon","Hash","NotificationIcon","NotificationsNone","MessagesIcon","EmailOutline","BookmarksIcon","Bookmark","ListIcon","ListAlt","ProfileIcon","UserCircle","MoreIcon","Ellipsis","button","TweetButton","onClick","Menu","Title","h3","StarIcon","Star","Header","ProfileContainer","RightContainer","TextArea","textarea","LeftIconsContainer","RightIconsContainer","iconStyle","ImageIcon","Image","GifIcon","Gif","StatsIcon","Stats","SmileIcon","SmileBeam","ButtonContainer","PlusIcon","PlusCircle","Divider","Circle","ActionBar","handleTweetButton","GET_TWEETS","gql","NEW_TWEET","CREATE_TWEET","WhatsHappening","useState","inputValue","setInputValue","useMutation","createTweet","onBlur","e","target","value","tweet","author","sessionStorage","getItem","user","message","variables","iconHover","Tweet","UserData","TweetAuthor","TweetData","ArrowDown","ChevronDown","Content","Actions","tweetIconsStyle","Answer","MessageRounded","Retweet","RT","Like","Heart","Export","Ex","StatsBars","Tweets","tweets","map","key","id","ReactTimeAgo","date","Number","createdAt","locale","Feed","data","loading","subscribeToMore","document","updateQuery","prev","subscriptionData","newTweet","find","t","SearchContainer","SearchIcon","Search","SearchInput","input","TrendsContainer","TrendingTitle","ConfigIcons","Cog","TrendingTopicsContainer","TrendingTopic","Topic","ShowMore","Discover","placeholder","name","href","Main","useEffect","title","LoginContainer","TwitterLogo","InputContainer","Input","UserIcon","User","AtIcon","At","LoginButton","Login","history","setName","username","setUsername","onChange","setItem","push","isAuthenticated","PrivateRoute","Component","component","rest","render","to","Routes","path","exact","GlobalStyles","createGlobalStyle","App","JavascriptTimeAgo","en","br","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f0bd54dd.chunk.js","sourcesContent":["import { getMainDefinition } from 'apollo-utilities';\nimport { ApolloLink, split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { ApolloClient } from 'apollo-client';\n\nconst httpLink = new HttpLink({\n  uri: 'http://ec2-54-198-26-99.compute-1.amazonaws.com:8000/graphql'\n});\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://ec2-54-198-26-99.compute-1.amazonaws.com:8000/graphql`,\n  options: {\n    reconnect: true\n  }\n});\n\nconst terminatingLink = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === 'OperationDefinition' && operation === 'subscription';\n  },\n  wsLink,\n  httpLink\n);\n\nconst link = ApolloLink.from([terminatingLink]);\nconst cache = new InMemoryCache();\n\nexport const client = new ApolloClient({\n  link,\n  cache\n});\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n`;\nexport const Column = styled.div`\n  display: flex;\n  height: 100%;\n  width: ${props => props.width};\n  background-color: ${props => props.color};\n  justify-content: ${props => (props.justifyRight ? 'flex-end' : 'flex-start')};\n`;\n","export const blue = '#1da1f2';\nexport const darkBlue = '#1987c6';\nexport const lightBlue = 'rgba(29, 161, 242, 0.1)';\nexport const grey = '#E6ECF0';\nexport const lightGrey = '#f7f7f7';\nexport const darkGrey = '#989da0';\n","import styled from 'styled-components';\nimport { Twitter } from 'styled-icons/boxicons-logos';\nimport { HomeCircle, UserCircle } from 'styled-icons/boxicons-solid';\n\nimport { blue, lightBlue } from '../../global-styles';\nimport { Hash, Bookmark } from 'styled-icons/boxicons-regular';\nimport { NotificationsNone, ListAlt } from 'styled-icons/material';\nimport { EmailOutline } from 'styled-icons/evaicons-outline';\nimport { Ellipsis } from 'styled-icons/octicons';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 5px 10px;\n  height: 100%;\n  width: 250px;\n  font-weight: bold;\n  font-size: 20px;\n`;\n\nexport const MenuItemContainer = styled.span`\n  margin: 5px 0px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const MenuItem = styled.span`\n  padding-right: 20px;\n  height: ${props => (props.height ? props.height : '')};\n  :hover {\n    color: ${blue};\n    background-color: ${props => (props.dontHover ? '' : lightBlue)};\n    cursor: pointer;\n    border-radius: 25px;\n  }\n`;\n\nexport const ActiveMenuItem = styled.span`\n  padding-right: 20px;\n  color: ${blue};\n  cursor: pointer;\n  border-radius: 25px;\n  :hover {\n    background-color: ${lightBlue};\n    cursor: pointer;\n    border-radius: 25px;\n  }\n`;\n\nexport const TwitterIcon = styled(Twitter).attrs({\n  height: '55px'\n})`\n  color: ${blue};\n  padding: 10px;\n  align-self: flex-start;\n  :hover {\n    background-color: ${lightBlue};\n    cursor: pointer;\n    border-radius: 50%;\n  }\n`;\n\nconst iconPadMg = `\npadding: 10px;\nmargin-right: 5px;\n`;\n\nexport const HomeIcon = styled(HomeCircle).attrs({\n  height: '50px'\n})`\n  ${iconPadMg}\n`;\n\nexport const HashIcon = styled(Hash).attrs({\n  height: '50px'\n})`\n  ${iconPadMg}\n`;\n\nexport const NotificationIcon = styled(NotificationsNone).attrs({\n  height: '50px'\n})`\n  ${iconPadMg}\n`;\n\nexport const MessagesIcon = styled(EmailOutline).attrs({\n  height: '50px'\n})`\n  ${iconPadMg}\n`;\n\nexport const BookmarksIcon = styled(Bookmark).attrs({\n  height: '50px'\n})`\n  ${iconPadMg}\n`;\n\nexport const ListIcon = styled(ListAlt).attrs({\n  height: '50px'\n})`\n  ${iconPadMg}\n`;\n\nexport const ProfileIcon = styled(UserCircle).attrs({\n  height: '50px'\n})`\n  ${iconPadMg}\n`;\n\nexport const MoreIcon = styled(Ellipsis).attrs({\n  height: '50px'\n})`\n  ${iconPadMg};\n  margin-left: 6px;\n`;\n","import styled from 'styled-components';\nimport { blue, darkBlue } from '../../global-styles';\n\nexport const Container = styled.button`\n  height: 100%;\n  border: none;\n  cursor: pointer;\n  width: 100%;\n  border-radius: 50px;\n  background-color: ${blue};\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 16px;\n  :hover {\n    background-color: ${props => (props.dontHover ? '' : darkBlue)};\n  }\n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\nexport default function TweetButton({ onClick }) {\n  return (\n    <Container onClick={onClick}>\n      <strong>Tweet</strong>\n    </Container>\n  );\n}\n","import React from 'react';\n\nimport {\n  Container,\n  MenuItemContainer,\n  MenuItem,\n  ActiveMenuItem,\n  TwitterIcon,\n  HomeIcon,\n  HashIcon,\n  NotificationIcon,\n  MessagesIcon,\n  BookmarksIcon,\n  ListIcon,\n  ProfileIcon,\n  MoreIcon\n} from './styles';\n\nimport TweetButton from '../TweetButton';\n\nexport default function Menu() {\n  return (\n    <Container>\n      <MenuItemContainer>\n        <TwitterIcon></TwitterIcon>\n      </MenuItemContainer>\n      <MenuItemContainer>\n        <ActiveMenuItem>\n          <HomeIcon />\n          <span>Home</span>\n        </ActiveMenuItem>\n      </MenuItemContainer>\n      <MenuItemContainer>\n        <MenuItem>\n          <HashIcon />\n          <span>Explore</span>\n        </MenuItem>\n      </MenuItemContainer>\n      <MenuItemContainer>\n        <MenuItem>\n          <NotificationIcon />\n          <span>Notifications</span>\n        </MenuItem>\n      </MenuItemContainer>\n      <MenuItemContainer>\n        <MenuItem>\n          <MessagesIcon />\n          <span>Messages</span>\n        </MenuItem>\n      </MenuItemContainer>\n      <MenuItemContainer>\n        <MenuItem>\n          <BookmarksIcon />\n          <span>Bookmarks</span>\n        </MenuItem>\n      </MenuItemContainer>\n      <MenuItemContainer>\n        <MenuItem>\n          <ListIcon />\n          <span>Lists</span>\n        </MenuItem>\n      </MenuItemContainer>\n      <MenuItemContainer>\n        <MenuItem>\n          <ProfileIcon />\n          <span>Profile</span>\n        </MenuItem>\n      </MenuItemContainer>\n      <MenuItemContainer>\n        <MenuItem>\n          <MoreIcon />\n          <span>More</span>\n        </MenuItem>\n      </MenuItemContainer>\n      <MenuItemContainer>\n        <MenuItem height=\"50px\" dontHover>\n          <TweetButton />\n        </MenuItem>\n      </MenuItemContainer>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport { grey } from '../../global-styles';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: ${grey};\n`;\n","import styled from 'styled-components';\nimport { grey, blue, lightBlue } from '../../../global-styles';\nimport { Star } from 'styled-icons/boxicons-regular';\n\nexport const Container = styled.div`\n  display: flex;\n  width: 100%;\n  height: 60px;\n  align-items: center;\n  background-color: #fff;\n  justify-content: space-between;\n  border-bottom: 1px solid ${grey};\n  border-left: 1px solid ${grey};\n  border-right: 1px solid ${grey};\n`;\n\nexport const Title = styled.h3`\n  font-weight: bold;\n  margin-left: 20px;\n`;\n\nexport const StarIcon = styled(Star).attrs({\n  height: '30px'\n})`\n  color: ${blue};\n  padding: 5px 10px;\n  margin-right: 10px;\n  :hover {\n    background-color: ${lightBlue};\n    cursor: pointer;\n    border-radius: 50%;\n  }\n`;\n","import React from 'react';\n\nimport { Container, Title, StarIcon } from './styles';\n\nexport default function Header() {\n  return (\n    <Container>\n      <Title>Home</Title>\n      <StarIcon></StarIcon>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport { darkGrey, grey } from '../../../global-styles';\nimport { UserCircle } from 'styled-icons/boxicons-solid';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 150px;\n  background-color: #fff;\n  display: flex;\n  border-left: 1px solid ${grey};\n  border-right: 1px solid ${grey};\n`;\n\nexport const ProfileContainer = styled.div`\n  height: 100%;\n  width: 10%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ProfileIcon = styled(UserCircle).attrs({\n  height: '70px'\n})`\n  color: ${darkGrey};\n  padding: 10px;\n  margin: 20px 0px;\n`;\n\nexport const RightContainer = styled.div`\n  display: flex;\n  width: 90%;\n  height: 100%;\n  flex-direction: column;\n`;\n\nexport const TextArea = styled.textarea`\n  width: 100%;\n  height: 60%;\n  padding: 20px 10px;\n  border: none;\n  font-size: 20px;\n  overflow: hidden;\n  resize: none;\n`;\n","import styled from 'styled-components';\nimport { Image } from '@styled-icons/evil/Image';\nimport { blue, lightBlue, darkGrey } from '../../../../global-styles';\nimport { Gif } from 'styled-icons/material';\nimport { Stats, PlusCircle } from 'styled-icons/boxicons-regular';\nimport { SmileBeam } from 'styled-icons/fa-regular';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 40%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const LeftIconsContainer = styled.div`\n  width: 20%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const RightIconsContainer = styled.div`\n  width: 220px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-right: 20px;\n`;\n\nconst iconStyle = `\n  color: ${blue};\n  padding: 5px;\n  border-radius: 50%;\n  :hover {\n    background-color: ${lightBlue};\n    cursor: pointer;\n  }\n`;\n\nexport const ImageIcon = styled(Image).attrs({\n  height: '40px'\n})`\n  ${iconStyle};\n`;\n\nexport const GifIcon = styled(Gif).attrs({\n  height: '40px'\n})`\n  ${iconStyle}\n`;\n\nexport const StatsIcon = styled(Stats).attrs({\n  height: '40px'\n})`\n  ${iconStyle}\n`;\n\nexport const SmileIcon = styled(SmileBeam).attrs({\n  height: '30px'\n})`\n  ${iconStyle}\n`;\n\nexport const ButtonContainer = styled.div`\n  height: 40px;\n  width: 90px;\n`;\n\nexport const PlusIcon = styled(PlusCircle).attrs({\n  height: '40px'\n})`\n  ${iconStyle}\n`;\n\nexport const Divider = styled.span`\n  height: 30px;\n  width: 1px;\n  background-color: ${darkGrey};\n`;\n\nexport const Circle = styled.span`\n  height: 25px;\n  width: 25px;\n  border: 2px solid ${blue};\n  border-radius: 20px;\n  :hover {\n    background-color: ${lightBlue};\n    cursor: pointer;\n  }\n`;\n","import React from 'react';\n\nimport {\n  Container,\n  LeftIconsContainer,\n  RightIconsContainer,\n  ImageIcon,\n  GifIcon,\n  StatsIcon,\n  SmileIcon,\n  ButtonContainer,\n  PlusIcon,\n  Divider,\n  Circle\n} from './styles';\n\nimport TweetButton from '../../../TweetButton';\n\nexport default function ActionBar({ handleTweetButton }) {\n  return (\n    <Container>\n      <LeftIconsContainer>\n        <ImageIcon />\n        <GifIcon />\n        <StatsIcon />\n        <SmileIcon />\n      </LeftIconsContainer>\n      <RightIconsContainer>\n        <Circle />\n        <Divider />\n        <PlusIcon />\n        <ButtonContainer>\n          <TweetButton onClick={handleTweetButton} />\n        </ButtonContainer>\n      </RightIconsContainer>\n    </Container>\n  );\n}\n","import gql from 'graphql-tag';\n\nexport const GET_TWEETS = gql`\n  query {\n    tweets {\n      id\n      author\n      user\n      message\n      createdAt\n    }\n  }\n`;\n\nexport const NEW_TWEET = gql`\n  subscription {\n    newTweet {\n      id\n      author\n      user\n      message\n      createdAt\n    }\n  }\n`;\n\nexport const CREATE_TWEET = gql`\n  mutation createTweet($author: String!, $user: String!, $message: String!) {\n    createTweet(author: $author, user: $user, message: $message) {\n      id\n    }\n  }\n`;\n","import React from 'react';\n\nimport {\n  Container,\n  ProfileContainer,\n  ProfileIcon,\n  TextArea,\n  RightContainer\n} from './styles';\nimport ActionBar from './ActionBar';\nimport { useState } from 'react';\nimport { useMutation } from 'react-apollo';\n\nimport { CREATE_TWEET } from '../../../repository';\n\nexport default function WhatsHappening() {\n  const [inputValue, setInputValue] = useState('');\n  const [createTweet] = useMutation(CREATE_TWEET);\n\n  function handleTweetButton() {\n    const tweet = {\n      author: sessionStorage.getItem('name'),\n      user: sessionStorage.getItem('username'),\n      message: inputValue\n    };\n    const { author, user, message } = tweet;\n    createTweet({ variables: { author, user, message } });\n  }\n  return (\n    <Container>\n      <ProfileContainer>\n        <ProfileIcon />\n      </ProfileContainer>\n      <RightContainer>\n        <TextArea onBlur={e => setInputValue(e.target.value)} />\n        <ActionBar handleTweetButton={() => handleTweetButton()}></ActionBar>\n      </RightContainer>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport { UserCircle } from 'styled-icons/boxicons-solid';\nimport { Retweet as RT } from '@styled-icons/entypo/Retweet';\nimport { Export as Ex } from '@styled-icons/boxicons-regular/Export';\n\nimport { grey, darkGrey, lightGrey, lightBlue } from '../../../global-styles';\nimport {\n  ChevronDown,\n  MessageRounded,\n  Heart\n} from 'styled-icons/boxicons-regular';\nimport { StatsBars } from 'styled-icons/icomoon';\n\nexport const iconHover = `:hover {\n  background-color: ${lightBlue};\n  cursor: pointer;\n  border-radius: 50%;\n}`;\n\nexport const Container = styled.div`\n  margin: 10px 0px;\n  width: 100%;\n  background-color: #fff;\n  border-left: 1px solid ${grey};\n  border-right: 1px solid ${grey};\n`;\n\nexport const Tweet = styled.div`\n  margin-left: 1px solid ${grey};\n  width: 100%;\n  border-top: 1px solid ${grey};\n  min-height: 100px;\n  display: flex;\n  :hover {\n    cursor: pointer;\n    background-color: ${lightGrey};\n  }\n`;\n\nexport const ProfileContainer = styled.div`\n  height: 100%;\n  width: 10%;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ProfileIcon = styled(UserCircle).attrs({\n  height: '70px'\n})`\n  color: ${darkGrey};\n  padding: 10px;\n  margin: 20px 0px;\n`;\n\nexport const RightContainer = styled.div`\n  width: 90%;\n  height: 100%;\n`;\n\nexport const Header = styled.div`\n  width: 100%;\n  height: 35px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const UserData = styled.div`\n  width: 500px;\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\n\nexport const TweetAuthor = styled.span`\n  font-weight: bold;\n  :hover {\n    text-decoration: underline;\n  }\n`;\n\nexport const TweetData = styled.span`\n  color: ${darkGrey};\n  margin-left: 10px;\n`;\n\nexport const ArrowDown = styled(ChevronDown).attrs({\n  height: '35px'\n})`\n  color: ${darkGrey};\n  padding: 5px;\n  border-radius: 50%;\n  margin-right: 10px;\n  ${iconHover}\n`;\n\nexport const Content = styled.div`\n  width: 100%;\n  min-height: 45px;\n  display: flex;\n`;\n\nexport const Actions = styled.div`\n  width: 80%;\n  min-height: 30px;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst tweetIconsStyle = `\n  color: ${darkGrey};\n  padding: 5px;\n  border-radius: 50%;\n  ${iconHover}\n`;\n\nexport const Answer = styled(MessageRounded).attrs({\n  height: '30px'\n})`\n  ${tweetIconsStyle}\n`;\n\nexport const Retweet = styled(RT).attrs({\n  height: '30px'\n})`\n  ${tweetIconsStyle}\n`;\n\nexport const Like = styled(Heart).attrs({\n  height: '30px'\n})`\n  ${tweetIconsStyle}\n`;\n\nexport const Export = styled(Ex).attrs({\n  height: '30px'\n})`\n  ${tweetIconsStyle}\n`;\n\nexport const Stats = styled(StatsBars).attrs({\n  height: '30px'\n})`\n  ${tweetIconsStyle}\n`;\n","import React from 'react';\n\nimport {\n  Container,\n  Tweet,\n  ProfileContainer,\n  ProfileIcon,\n  RightContainer,\n  Header,\n  UserData,\n  TweetData,\n  TweetAuthor,\n  ArrowDown,\n  Content,\n  Actions,\n  Answer,\n  Retweet,\n  Like,\n  Export,\n  Stats\n} from './styles';\n\nimport ReactTimeAgo from 'react-time-ago';\n\nexport default function Tweets({ tweets }) {\n  return (\n    <Container>\n      {tweets &&\n        tweets.map(tweet => (\n          <Tweet key={tweet.id}>\n            <ProfileContainer>\n              <ProfileIcon />\n            </ProfileContainer>\n            <RightContainer>\n              <Header>\n                <UserData>\n                  <TweetAuthor>{tweet.author}</TweetAuthor>\n                  <TweetData>@{tweet.user}</TweetData>\n                  <TweetData>\n                    ·{' '}\n                    <ReactTimeAgo date={Number(tweet.createdAt)} locale=\"en\" />\n                  </TweetData>\n                </UserData>\n                <ArrowDown />\n              </Header>\n              <Content>\n                <span>{tweet.message}</span>\n              </Content>\n              <Actions>\n                <Answer />\n                <Retweet />\n                <Like />\n                <Export />\n                <Stats />\n              </Actions>\n            </RightContainer>\n          </Tweet>\n        ))}\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Query } from 'react-apollo';\n\nimport { Container } from './styles';\nimport Header from './Header';\nimport WhatsHappening from './WhatsHappening';\nimport Tweets from './Tweets';\n\nimport { GET_TWEETS, NEW_TWEET } from '../../repository';\n\nexport default function Feed() {\n  return (\n    <Container>\n      <Header />\n      <WhatsHappening />\n      <Query query={GET_TWEETS}>\n        {({ data, loading, subscribeToMore }) => {\n          if (!data) return null;\n          if (loading) return <span>Loading...</span>;\n          subscribeToMore({\n            document: NEW_TWEET,\n            updateQuery: (prev, { subscriptionData }) => {\n              if (!subscriptionData.data) return prev;\n              const { newTweet } = subscriptionData.data;\n              if (prev.tweets.find(t => t.id === newTweet.id)) {\n                return prev;\n              }\n              return {\n                ...prev,\n                tweets: [newTweet, ...prev.tweets]\n              };\n            }\n          });\n          return <Tweets tweets={data.tweets}></Tweets>;\n        }}\n      </Query>\n      <Tweets />\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport {\n  grey,\n  darkGrey,\n  lightGrey,\n  blue,\n  lightBlue\n} from '../../global-styles';\nimport { Search, Cog, ChevronDown } from 'styled-icons/boxicons-regular';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  padding-top: 10px;\n  padding-left: 30px;\n  flex-direction: column;\n`;\n\nexport const SearchContainer = styled.div`\n  width: 300px;\n  height: 40px;\n  background-color: ${grey};\n  border-radius: 40px;\n  padding: 0px 10px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const SearchIcon = styled(Search).attrs({\n  height: '20px'\n})`\n  color: ${darkGrey};\n  margin-right: 10px;\n`;\n\nexport const SearchInput = styled.input`\n  background: none;\n  border: none;\n  ::placeholder {\n    color: ${darkGrey};\n  }\n`;\n\nexport const TrendsContainer = styled.div`\n  width: 300px;\n  height: 500px;\n  margin-top: 20px;\n  background-color: ${lightGrey};\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TrendingTitle = styled.span`\n  font-weight: bold;\n  font-size: 18px;\n  height: 50px;\n  width: 100%;\n  background: none;\n  display: flex;\n  align-items: center;\n  padding-left: 20px;\n  border-bottom: 1px solid ${grey};\n  justify-content: space-between;\n`;\n\nexport const ConfigIcons = styled(Cog).attrs({\n  height: '35px'\n})`\n  color: ${blue};\n  padding: 5px;\n  margin-right: 20px;\n  :hover {\n    background-color: ${lightBlue};\n    cursor: pointer;\n    border-radius: 50%;\n  }\n`;\n\nexport const TrendingTopicsContainer = styled.div`\n  width: 100%;\n`;\n\nexport const TrendingTopic = styled.div`\n  width: 100%;\n  height: 80px;\n  border-bottom: 1px solid ${grey};\n  display: flex;\n`;\n\nexport const Topic = styled.span`\n  width: 100%;\n  padding-left: 20px;\n  display: flex;\n  flex-direction: column;\n  align-self: center;\n  a {\n    color: #000;\n    text-decoration: none;\n    font-weight: bold;\n    :hover {\n      text-decoration: underline;\n      cursor: pointer;\n    }\n  }\n  span {\n    color: ${darkGrey};\n  }\n`;\n\nexport const ArrowDown = styled(ChevronDown).attrs({\n  height: '35px'\n})`\n  color: ${darkGrey};\n  padding: 5px;\n  border-radius: 50%;\n  margin-right: 20px;\n  :hover {\n    background-color: ${lightBlue};\n    cursor: pointer;\n    border-radius: 50%;\n  }\n`;\n\nexport const ShowMore = styled.div`\n  color: ${blue};\n  display: flex;\n  font-size: 14px;\n  cursor: pointer;\n  width: 100%;\n  height: 50px;\n  align-items: center;\n  padding-left: 20px;\n`;\n","import React from 'react';\n\nimport {\n  Container,\n  SearchContainer,\n  SearchIcon,\n  SearchInput,\n  TrendsContainer,\n  TrendingTitle,\n  ConfigIcons,\n  TrendingTopicsContainer,\n  TrendingTopic,\n  Topic,\n  ArrowDown,\n  ShowMore\n} from './styles';\n\nexport default function Discover() {\n  const trends = [\n    {\n      id: 1,\n      name: '#GraphQL',\n      tweets: '127K Tweets',\n      link: 'https://www.graphql.com/'\n    },\n    {\n      id: 2,\n      name: '#NodeJs',\n      tweets: '999K Tweets',\n      link: 'https://nodejs.org/en/'\n    },\n    {\n      id: 3,\n      name: '#React',\n      tweets: '378K Tweets',\n      link: 'https://reactjs.org/'\n    },\n    {\n      id: 4,\n      name: '#linkedin/viniciusestevam1',\n      tweets: '31K Tweets',\n      link: 'https://linkedin.com/in/vinicius-estevam1'\n    },\n    {\n      id: 5,\n      name: '#github/estevam31',\n      tweets: '31K Tweets',\n      link: 'https://github.com/estevam31'\n    }\n  ];\n\n  return (\n    <Container>\n      <SearchContainer>\n        <SearchIcon />\n        <SearchInput placeholder=\"Search Twitter\" />\n      </SearchContainer>\n      <TrendsContainer>\n        <TrendingTitle>\n          Trends for you <ConfigIcons />\n        </TrendingTitle>\n        <TrendingTopicsContainer>\n          {trends.map(t => (\n            <TrendingTopic key={t.id}>\n              <Topic>\n                <a href={t.link} target=\"blank\">\n                  {t.name}\n                </a>\n                <span>{t.tweets}</span>\n              </Topic>\n              <ArrowDown />\n            </TrendingTopic>\n          ))}\n        </TrendingTopicsContainer>\n        <ShowMore>\n          <span>Show more</span>\n        </ShowMore>\n      </TrendsContainer>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { Container, Column } from './styles';\n\nimport Menu from '../../components/Menu';\nimport Feed from '../../components/Feed';\nimport Discover from '../../components/Discover';\n\nexport default function Main() {\n  useEffect(() => {\n    document.title = 'Home / Twitter';\n  }, []);\n\n  return (\n    <Container>\n      <Column width=\"25%\" justifyRight>\n        <Menu />\n      </Column>\n      <Column width=\"50%\">\n        <Feed />\n      </Column>\n      <Column width=\"25%\">\n        <Discover />\n      </Column>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nimport { blue, grey, darkGrey, darkBlue } from '../../global-styles';\nimport { Twitter } from 'styled-icons/boxicons-logos';\nimport { User, At } from 'styled-icons/boxicons-regular';\n\nexport const Container = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const LoginContainer = styled.div`\n  width: 500px;\n  height: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const TwitterLogo = styled(Twitter).attrs({\n  height: '100px'\n})`\n  color: ${blue};\n  margin-bottom: 50px;\n`;\n\nexport const InputContainer = styled.div`\n  width: 300px;\n  height: 40px;\n  background-color: ${grey};\n  border-radius: 40px;\n  padding: 0px 10px;\n  margin: 5px 0px;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  height: 100%;\n  background: none;\n  border: none;\n  ::placeholder {\n    color: ${darkGrey};\n  }\n`;\n\nexport const UserIcon = styled(User).attrs({\n  height: '20px'\n})`\n  color: ${darkGrey};\n  margin-right: 10px;\n`;\n\nexport const AtIcon = styled(At).attrs({\n  height: '20px'\n})`\n  color: ${darkGrey};\n  margin-right: 10px;\n`;\n\nexport const LoginButton = styled.button`\n  width: 320px;\n  height: 50px;\n  background-color: ${blue};\n  border: none;\n  border-radius: 40px;\n  margin-top: 20px;\n  cursor: pointer;\n  color: #fff;\n  font-weight: bold;\n  font-size: 18px;\n  :hover {\n    background-color: ${darkBlue};\n  }\n`;\n","import React from 'react';\n\nimport {\n  Container,\n  LoginContainer,\n  TwitterLogo,\n  InputContainer,\n  Input,\n  UserIcon,\n  AtIcon,\n  LoginButton\n} from './styles';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nexport default function Login({ history }) {\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const nameLabel = 'Name';\n  const usernameLabel = 'Username';\n\n  useEffect(() => {\n    document.title = 'Twitter';\n  }, []);\n\n  function handleButtonClick() {\n    sessionStorage.setItem('username', username);\n    sessionStorage.setItem('name', name);\n    if (sessionStorage.getItem('username') && sessionStorage.getItem('name')) {\n      history.push('/');\n    }\n  }\n\n  return (\n    <Container>\n      <LoginContainer>\n        <TwitterLogo />\n        <InputContainer>\n          <UserIcon />\n          <Input\n            value={name}\n            placeholder={nameLabel}\n            onChange={e => setName(e.target.value)}\n          />\n        </InputContainer>\n        <InputContainer>\n          <AtIcon />\n          <Input\n            value={username}\n            placeholder={usernameLabel}\n            onChange={e => setUsername(e.target.value)}\n          />\n        </InputContainer>\n        <LoginButton onClick={() => handleButtonClick()}>Sign in</LoginButton>\n      </LoginContainer>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { Switch, Route, BrowserRouter, Redirect } from 'react-router-dom';\n\nimport Main from './pages/Main';\nimport Login from './pages/Login';\n\nfunction isAuthenticated() {\n  const username = sessionStorage.getItem('username');\n  const name = sessionStorage.getItem('name');\n  return username && name;\n}\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isAuthenticated() ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route\n          path=\"/login\"\n          exact\n          render={props =>\n            isAuthenticated() ? <Redirect to=\"/\" /> : <Login {...props} />\n          }\n        />\n        <PrivateRoute path=\"/\" exact component={Main} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\n\nimport Routes from './routes';\n\nexport const GlobalStyles = createGlobalStyle`\n* {\n  margin: 0;\n  padding: 0;\n  outline: 0;\n  box-sizing: border-box;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  transition: 0.05s;\n}\n\nhtml,\nbody,\n#root {\n  height: 100%;\n}\n\nbody {\n  background: #fff;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","import JavascriptTimeAgo from 'javascript-time-ago';\n\n// The desired locales.\nimport en from 'javascript-time-ago/locale/en';\nimport br from 'javascript-time-ago/locale/br';\n\n// Initialize the desired locales.\nJavascriptTimeAgo.locale(en);\nJavascriptTimeAgo.locale(br);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloProvider } from 'react-apollo';\n\nimport { client } from './config/graphql-config';\n\nimport App from './App';\nimport './config/locale-config.js';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}